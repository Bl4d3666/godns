name: Github Release

on:
  push:
    branches: [main]
    tags:
      - "v*"

jobs:
  linux-builds:
    name: Linux Builds
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      matrix:
        goos: [linux]
        goarch:
          [
            386,
            amd64,
            arm64,
            mips,
            mips64,
            mips64le,
            mipsle,
            ppc64,
            ppc64le,
            riscv64,
            s390x,
          ]

    steps:
      - name: Go 1.21
        uses: actions/setup-go@v4
        with:
          go-version: "^1.21"

      - name: Check Out Code
        uses: actions/checkout@v4

      - name: Git Fetch Tags
        run: git fetch --prune --unshallow --tags -f

      - name: Go Build
        run: CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -trimpath -ldflags="-s -w" -o ./godns_${{ matrix.goos }}-${{ matrix.goarch }} .
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: linux-builds
          path: ./godns_*

  bsd-builds:
    name: BSD Builds
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      matrix:
        goos: [darwin, freebsd, openbsd, netbsd]
        goarch: [amd64, arm64]

    steps:
      - name: Go 1.21
        uses: actions/setup-go@v4
        with:
          go-version: "^1.21"

      - name: Check Out Code
        uses: actions/checkout@v4

      - name: Git Fetch Tags
        run: git fetch --prune --unshallow --tags -f

      - name: Go Build
        run: CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -trimpath -ldflags="-s -w" -o ./godns_${{ matrix.goos }}-${{ matrix.goarch }} .

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: bsd-builds
          path: ./godns_*

  ios-build:
    name: iOS Build
    runs-on: macos-latest-xlarge
    timeout-minutes: 10
    steps:
      - name: Go 1.21
        uses: actions/setup-go@v4
        with:
          go-version: "^1.21"

      - name: Check Out Code
        uses: actions/checkout@v4

      - name: Git Fetch Tags
        run: git fetch --prune --unshallow --tags -f

      - name: Go Build
        run: CGO_ENABLED=1 GOOS=ios GOARCH=arm64 go build -trimpath -ldflags="-s -w" -o ./godns_ios-arm64 .

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: ios-build
          path: ./godns_*

  android-build:
    name: Android Build
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: Go 1.21
        uses: actions/setup-go@v4
        with:
          go-version: "^1.21"

      - name: Check Out Code
        uses: actions/checkout@v4

      - name: Git Fetch Tags
        run: git fetch --prune --unshallow --tags -f

      - name: Go Build
        run: CGO_ENABLED=0 GOOS=android GOARCH=arm64 go build -trimpath -ldflags="-s -w" -o ./godns_android-arm64 .

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: android-build
          path: ./godns_*

  other-builds:
    name: Other Builds
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      matrix:
        goos: [dragonfly, plan9, solaris]
        goarch: [amd64]

    steps:
      - name: Go 1.21
        uses: actions/setup-go@v4
        with:
          go-version: "^1.21"

      - name: Check Out Code
        uses: actions/checkout@v4

      - name: Git Fetch Tags
        run: git fetch --prune --unshallow --tags -f

      - name: Go Build
        run: CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -trimpath -ldflags="-s -w" -o ./godns_${{ matrix.goos }}-${{ matrix.goarch }} .

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: other-builds
          path: ./godns_*

  windows-builds:
    name: Windows Builds
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      matrix:
        goos: [windows]
        goarch: [386, amd64, arm64]

    steps:
      - name: Go 1.21
        uses: actions/setup-go@v4
        with:
          go-version: "^1.21"

      - name: Check Out Code
        uses: actions/checkout@v4

      - name: Git Fetch Tags
        run: git fetch --prune --unshallow --tags -f

      - name: Go Build
        run: CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -trimpath -ldflags="-s -w" -o ./godns_${{ matrix.goos }}-${{ matrix.goarch }}.exe .

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: windows-builds
          path: ./godns_*

  tagged-release:
    needs:
      [
        linux-builds,
        bsd-builds,
        ios-build,
        android-build,
        other-builds,
        windows-builds,
      ]

    name: "Tagged Release"
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - run: mkdir -p ./builds
      - uses: actions/download-artifact@v3
        with:
          path: ./builds

      - name: "Publish Release"
        uses: "bishopfox/action-gh-release@v1"
        with:
          files: |
            ./builds/*
